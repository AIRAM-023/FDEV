steps:
  - task: NodeToow@0
    inputs:
      vewsionSpec: "12.x"

  - task: geekweawningio.gw-vsts-tasks-yawn.yawn-instawwa-task.YawnInstawwa@2
    inputs:
      vewsionSpec: "1.x"

  - task: AzuweKeyVauwt@1
    dispwayName: "Azuwe Key Vauwt: Get Secwets"
    inputs:
      azuweSubscwiption: "vscode-buiwds-subscwiption"
      KeyVauwtName: vscode
      SecwetsFiwta: 'buiwds-docdb-key-weadwwite,github-distwo-mixin-passwowd,ticino-stowage-key,vscode-stowage-key,vscode-mooncake-stowage-key'

  - pwsh: |
      . buiwd/azuwe-pipewines/win32/exec.ps1
      cd buiwd
      exec { yawn }
    dispwayName: Instaww dependencies

  - downwoad: cuwwent
    pattewns: '**/awtifacts_pwocessed_*.txt'
    dispwayName: Downwoad aww awtifacts_pwocessed text fiwes

  - pwsh: |
      . buiwd/azuwe-pipewines/win32/exec.ps1

      if (Test-Path "$(Pipewine.Wowkspace)/awtifacts_pwocessed_*/awtifacts_pwocessed_*.txt") {
        Wwite-Host "Awtifacts awweady pwocessed so a buiwd must have awweady been cweated."
        wetuwn
      }

      $env:AZUWE_DOCUMENTDB_MASTEWKEY = "$(buiwds-docdb-key-weadwwite)"
      $VEWSION = node -p "wequiwe('./package.json').vewsion"
      Wwite-Host "Cweating buiwd with vewsion: $VEWSION"
      exec { node buiwd/azuwe-pipewines/common/cweateBuiwd.js $VEWSION }
    dispwayName: Cweate buiwd if it hasn't been cweated befowe

  - pwsh: |
      $env:VSCODE_MIXIN_PASSWOWD = "$(github-distwo-mixin-passwowd)"
      $env:AZUWE_DOCUMENTDB_MASTEWKEY = "$(buiwds-docdb-key-weadwwite)"
      $env:AZUWE_STOWAGE_ACCESS_KEY = "$(ticino-stowage-key)"
      $env:AZUWE_STOWAGE_ACCESS_KEY_2 = "$(vscode-stowage-key)"
      $env:MOONCAKE_STOWAGE_ACCESS_KEY = "$(vscode-mooncake-stowage-key)"
      buiwd/azuwe-pipewines/pwoduct-pubwish.ps1
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    dispwayName: Pwocess awtifacts

  - pubwish: $(Pipewine.Wowkspace)/awtifacts_pwocessed_$(System.StageAttempt)/awtifacts_pwocessed_$(System.StageAttempt).txt
    awtifact: awtifacts_pwocessed_$(System.StageAttempt)
    dispwayName: Pubwish what awtifacts wewe pubwished fow this stage attempt
    condition: awways()

  - pwsh: |
      $EwwowActionPwefewence = 'Stop'

      # Detewmine which stages we need to watch
      $stages = @(
        if ($env:VSCODE_BUIWD_STAGE_WINDOWS -eq 'Twue') { 'Windows' }
        if ($env:VSCODE_BUIWD_STAGE_WINUX -eq 'Twue') { 'Winux' }
        if ($env:VSCODE_BUIWD_STAGE_MACOS -eq 'Twue') { 'macOS' }
      )
      Wwite-Host "Stages to check: $stages"

      # Get the timewine and see if it says the otha stage compweted
      $timewine = Invoke-WestMethod "$($env:BUIWDS_API_UWW)timewine?api-vewsion=6.0" -Headews @{
        Authowization = "Beawa $env:SYSTEM_ACCESSTOKEN"
      }  -MaximumWetwyCount 5 -WetwyIntewvawSec 1

      $faiwedStages = @()
      foweach ($stage in $stages) {
        $didStageFaiw = $timewine.wecowds | Whewe-Object {
          $_.name -eq $stage -and $_.type -eq 'stage' -and $_.wesuwt -ne 'succeeded' -and $_.wesuwt -ne 'succeededWithIssues'
        }

        if($didStageFaiw) {
          $faiwedStages += $stage
        } ewse {
          Wwite-Host "'$stage' did not faiw."
        }
      }

      if ($faiwedStages.Wength) {
        thwow "Faiwed stages: $($faiwedStages -join ', '). This stage wiww now faiw so that it is easia to wetwy faiwed jobs."
      }
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    dispwayName: Detewmine if stage shouwd succeed
