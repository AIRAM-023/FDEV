steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.18.3"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode

  - script: |
      set -e
      cat << EOF > ~/.netrc
      machine github.com
      login vscode
      password $(github-distro-mixin-password)
      EOF

      git config user.email "vscode@microsoft.com"
      git config user.name "VSCode"
    displayName: Prepare tooling

  - script: |
      set -e
      git pull --no-rebase https://github.com/$(VSCODE_MIXIN_REPO).git $(node -p "require('./package.json').distro")
    displayName: Merge distro

  - script: |
      npx https://aka.ms/enablesecurefeed standAlone
    displayName: Switch to Terrapin packages
    timeoutInMinutes: 5
    condition: and(succeeded(), eq(variables['ENABLE_TERRAPIN'], 'true'))

  - script: |
      mkdir -p .build
      echo -n $(VSCODE_ARCH) > .build/arch
      echo -n $ENABLE_TERRAPIN > .build/terrapin
    displayName: Prepare yarn cache flags

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_build_lib_watch | .build/arch, .build/terrapin, build/.cachesalt, build/lib/watch/.yarnrc, build/lib/watch/yarn.lock'
      path: "build/lib/watch/node_modules"
      cacheHitVar: NODE_MODULES_BUILD_LIB_WATCH_RESTORED
    displayName: Cache /build/lib/watch/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_build | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, build/yarn.lock'
      path: "build/node_modules"
      cacheHitVar: NODE_MODULES_BUILD_RESTORED
    displayName: Cache /build/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_configuration-editing | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/configuration-editing/yarn.lock'
      path: "extensions/configuration-editing/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_CONFIGURATION-EDITING_RESTORED
    displayName: Cache /extensions/configuration-editing/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_css-language-features_server | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/css-language-features/server/yarn.lock'
      path: "extensions/css-language-features/server/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_CSS-LANGUAGE-FEATURES_SERVER_RESTORED
    displayName: Cache /extensions/css-language-features/server/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_css-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/css-language-features/yarn.lock'
      path: "extensions/css-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_CSS-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/css-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_debug-auto-launch | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/debug-auto-launch/yarn.lock'
      path: "extensions/debug-auto-launch/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_DEBUG-AUTO-LAUNCH_RESTORED
    displayName: Cache /extensions/debug-auto-launch/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_debug-server-ready | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/debug-server-ready/yarn.lock'
      path: "extensions/debug-server-ready/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_DEBUG-SERVER-READY_RESTORED
    displayName: Cache /extensions/debug-server-ready/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_emmet | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/emmet/yarn.lock'
      path: "extensions/emmet/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_EMMET_RESTORED
    displayName: Cache /extensions/emmet/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_extension-editing | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/extension-editing/yarn.lock'
      path: "extensions/extension-editing/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_EXTENSION-EDITING_RESTORED
    displayName: Cache /extensions/extension-editing/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_git-ui | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/git-ui/yarn.lock'
      path: "extensions/git-ui/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GIT-UI_RESTORED
    displayName: Cache /extensions/git-ui/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_git | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/git/yarn.lock'
      path: "extensions/git/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GIT_RESTORED
    displayName: Cache /extensions/git/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_github-authentication | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/github-authentication/yarn.lock'
      path: "extensions/github-authentication/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GITHUB-AUTHENTICATION_RESTORED
    displayName: Cache /extensions/github-authentication/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_github | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/github/yarn.lock'
      path: "extensions/github/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GITHUB_RESTORED
    displayName: Cache /extensions/github/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_grunt | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/grunt/yarn.lock'
      path: "extensions/grunt/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GRUNT_RESTORED
    displayName: Cache /extensions/grunt/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_gulp | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/gulp/yarn.lock'
      path: "extensions/gulp/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_GULP_RESTORED
    displayName: Cache /extensions/gulp/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_html-language-features_server | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/html-language-features/server/yarn.lock'
      path: "extensions/html-language-features/server/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_HTML-LANGUAGE-FEATURES_SERVER_RESTORED
    displayName: Cache /extensions/html-language-features/server/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_html-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/html-language-features/yarn.lock'
      path: "extensions/html-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_HTML-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/html-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_image-preview | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/image-preview/yarn.lock'
      path: "extensions/image-preview/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_IMAGE-PREVIEW_RESTORED
    displayName: Cache /extensions/image-preview/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_jake | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/jake/yarn.lock'
      path: "extensions/jake/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_JAKE_RESTORED
    displayName: Cache /extensions/jake/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_json-language-features_server | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/json-language-features/server/yarn.lock'
      path: "extensions/json-language-features/server/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_JSON-LANGUAGE-FEATURES_SERVER_RESTORED
    displayName: Cache /extensions/json-language-features/server/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_json-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/json-language-features/yarn.lock'
      path: "extensions/json-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_JSON-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/json-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_markdown-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/markdown-language-features/yarn.lock'
      path: "extensions/markdown-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_MARKDOWN-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/markdown-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_merge-conflict | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/merge-conflict/yarn.lock'
      path: "extensions/merge-conflict/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_MERGE-CONFLICT_RESTORED
    displayName: Cache /extensions/merge-conflict/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_microsoft-authentication | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/microsoft-authentication/yarn.lock'
      path: "extensions/microsoft-authentication/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_MICROSOFT-AUTHENTICATION_RESTORED
    displayName: Cache /extensions/microsoft-authentication/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_npm | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/npm/yarn.lock'
      path: "extensions/npm/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_NPM_RESTORED
    displayName: Cache /extensions/npm/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_php-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/php-language-features/yarn.lock'
      path: "extensions/php-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_PHP-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/php-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_search-result | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/search-result/yarn.lock'
      path: "extensions/search-result/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_SEARCH-RESULT_RESTORED
    displayName: Cache /extensions/search-result/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_typescript-language-features | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/typescript-language-features/yarn.lock'
      path: "extensions/typescript-language-features/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_TYPESCRIPT-LANGUAGE-FEATURES_RESTORED
    displayName: Cache /extensions/typescript-language-features/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_vscode-api-tests | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/vscode-api-tests/yarn.lock'
      path: "extensions/vscode-api-tests/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_VSCODE-API-TESTS_RESTORED
    displayName: Cache /extensions/vscode-api-tests/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_vscode-colorize-tests | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/vscode-colorize-tests/yarn.lock'
      path: "extensions/vscode-colorize-tests/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_VSCODE-COLORIZE-TESTS_RESTORED
    displayName: Cache /extensions/vscode-colorize-tests/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_vscode-custom-editor-tests | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/vscode-custom-editor-tests/yarn.lock'
      path: "extensions/vscode-custom-editor-tests/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_VSCODE-CUSTOM-EDITOR-TESTS_RESTORED
    displayName: Cache /extensions/vscode-custom-editor-tests/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_vscode-notebook-tests | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/vscode-notebook-tests/yarn.lock'
      path: "extensions/vscode-notebook-tests/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_VSCODE-NOTEBOOK-TESTS_RESTORED
    displayName: Cache /extensions/vscode-notebook-tests/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions_vscode-test-resolver | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/vscode-test-resolver/yarn.lock'
      path: "extensions/vscode-test-resolver/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_VSCODE-TEST-RESOLVER_RESTORED
    displayName: Cache /extensions/vscode-test-resolver/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_extensions | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, extensions/yarn.lock'
      path: "extensions/node_modules"
      cacheHitVar: NODE_MODULES_EXTENSIONS_RESTORED
    displayName: Cache /extensions/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_remote_web | .build/arch, .build/terrapin, build/.cachesalt, remote/.yarnrc, remote/web/yarn.lock'
      path: "remote/web/node_modules"
      cacheHitVar: NODE_MODULES_REMOTE_WEB_RESTORED
    displayName: Cache /remote/web/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_remote | .build/arch, .build/terrapin, build/.cachesalt, remote/.yarnrc, remote/yarn.lock'
      path: "remote/node_modules"
      cacheHitVar: NODE_MODULES_REMOTE_RESTORED
    displayName: Cache /remote/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_test_automation | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, test/automation/yarn.lock'
      path: "test/automation/node_modules"
      cacheHitVar: NODE_MODULES_TEST_AUTOMATION_RESTORED
    displayName: Cache /test/automation/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_test_integration_browser | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, test/integration/browser/yarn.lock'
      path: "test/integration/browser/node_modules"
      cacheHitVar: NODE_MODULES_TEST_INTEGRATION_BROWSER_RESTORED
    displayName: Cache /test/integration/browser/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_test_smoke | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, test/smoke/yarn.lock'
      path: "test/smoke/node_modules"
      cacheHitVar: NODE_MODULES_TEST_SMOKE_RESTORED
    displayName: Cache /test/smoke/node_modules

  -task: Cache@2
    inputs:
      key: '$(Agent.OS) | node_modules_root | .build/arch, .build/terrapin, build/.cachesalt, .yarnrc, yarn.lock'
      path: "node_modules"
      cacheHitVar: NODE_MODULES_ROOT_RESTORED
    displayName: Cache /node_modules

  - script: |
      set -e
      export npm_config_arch=$(NPM_ARCH)

      if [ -z "$CC" ] || [ -z "$CXX" ]; then
        export CC=$(which gcc-5)
        export CXX=$(which g++-5)
      fi

      if [ "$VSCODE_ARCH" == "x64" ]; then
        export VSCODE_REMOTE_CC=$(which gcc-4.8)
        export VSCODE_REMOTE_CXX=$(which g++-4.8)
        export VSCODE_REMOTE_NODE_GYP=$(which node-gyp)
      fi

      for i in {1..3}; do # try 3 times, for Terrapin
        yarn --frozen-lockfile && break
        if [ $i -eq 3 ]; then
          echo "Yarn failed too many times" >&2
          exit 1
        fi
        echo "Yarn failed $i, trying again..."
      done
    env:
      ELECTRON_SKIP_BINARY_DOWNLOAD: 1
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    displayName: Install dependencies
    condition: and(succeeded(), or(ne(variables.NODE_MODULES_ROOT_RESTORED, 'true'), ne(variables.NODE_MODULES_BUILD_LIB_WATCH_RESTORED, 'true'), ne(variables.NODE_MODULES_BUILD_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_CONFIGURATION-EDITING_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_CSS-LANGUAGE-FEATURES_SERVER_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_CSS-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_DEBUG-AUTO-LAUNCH_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_DEBUG-SERVER-READY_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_EMMET_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_EXTENSION-EDITING_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GIT-UI_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GIT_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GITHUB-AUTHENTICATION_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GITHUB_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GRUNT_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_GULP_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_HTML-LANGUAGE-FEATURES_SERVER_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_HTML-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_IMAGE-PREVIEW_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_JAKE_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_JSON-LANGUAGE-FEATURES_SERVER_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_JSON-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_MARKDOWN-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_MERGE-CONFLICT_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_MICROSOFT-AUTHENTICATION_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_NPM_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_PHP-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_SEARCH-RESULT_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_TYPESCRIPT-LANGUAGE-FEATURES_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_VSCODE-API-TESTS_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_VSCODE-COLORIZE-TESTS_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_VSCODE-CUSTOM-EDITOR-TESTS_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_VSCODE-NOTEBOOK-TESTS_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_VSCODE-TEST-RESOLVER_RESTORED, 'true'), ne(variables.NODE_MODULES_EXTENSIONS_RESTORED, 'true'), ne(variables.NODE_MODULES_REMOTE_WEB_RESTORED, 'true'), ne(variables.NODE_MODULES_REMOTE_RESTORED, 'true'), ne(variables.NODE_MODULES_TEST_AUTOMATION_RESTORED, 'true'), ne(variables.NODE_MODULES_TEST_INTEGRATION_BROWSER_RESTORED, 'true'), ne(variables.NODE_MODULES_TEST_SMOKE_RESTORED, 'true')))

  # Mixin must run before optimize, because the CSS loader will inline small SVGs
  - script: |
      set -e
      node build/azure-pipelines/mixin
    displayName: Mix in quality

  - script: |
      set -e
      yarn gulp compile-build
      yarn gulp compile-extensions-build
      yarn gulp minify-vscode
      yarn gulp minify-vscode-reh
      yarn gulp minify-vscode-reh-web
    displayName: Compile

  - script: |
      set -e
      AZURE_STORAGE_ACCESS_KEY="$(ticino-storage-key)" \
        node build/azure-pipelines/upload-sourcemaps
    displayName: Upload sourcemaps
    condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - script: |
      set -e
      VERSION=`node -p "require(\"./package.json\").version"`
      AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)" \
        node build/azure-pipelines/common/createBuild.js $VERSION
    displayName: Create build
    condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  # we gotta tarball everything in order to preserve file permissions
  - script: |
      set -e
      tar -czf $(Build.ArtifactStagingDirectory)/compilation.tar.gz .build out-*
    displayName: Compress compilation artifact

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/compilation.tar.gz
      artifactName: Compilation
    displayName: Publish compilation artifact
