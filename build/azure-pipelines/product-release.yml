steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode

  - pwsh: |
      . build/azure-pipelines/win32/exec.ps1
      exec {
        cd build
        yarn
      }
    displayName: Install dependencies

  - download: current
    patterns: '**/artifacts_processed.txt'

  - pwsh: |
      . build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = 'Stop'

      if (Test-Path "$(Pipeline.Workspace)/artifacts_processed/artifacts_processed.txt") {
        return
      }

      $env:AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)"
      exec {
        $VERSION = node -p "require('./package.json').version"
        Write-Host "Creating build with version: $VERSION"
        node build/azure-pipelines/common/createBuild.js $VERSION
      }
    displayName: Create build

  - pwsh: Start-Sleep -Seconds 600
    displayName: Delay start for 10min

  - pwsh: |
      $env:VSCODE_MIXIN_PASSWORD="$(github-distro-mixin-password)"
      $env:AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)"
      $env:AZURE_STORAGE_ACCESS_KEY="$(ticino-storage-key)"
      $env:AZURE_STORAGE_ACCESS_KEY_2="$(vscode-storage-key)"
      build/azure-pipelines/release.ps1
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    displayName: Process artifacts

  - publish: $(Pipeline.Workspace)/artifacts_processed/artifacts_processed.txt
    artifact: artifacts_processed
    displayName: Publish what artifacts were published

  - pwsh: |
      . build/azure-pipelines/win32/exec.ps1

      $env:AZURE_DOCUMENTDB_MASTERKEY = "$(builds-docdb-key-readwrite)"
      $env:AZURE_STORAGE_ACCESS_KEY_2 = "$(vscode-storage-key)"
      $env:MOONCAKE_STORAGE_ACCESS_KEY = "$(vscode-mooncake-storage-key)"
      exec { node build/azure-pipelines/common/sync-mooncake.js $env:VSCODE_QUALITY }

  - pwsh: |
      . build/azure-pipelines/win32/exec.ps1

      $env:AZURE_DOCUMENTDB_MASTERKEY = "$(builds-docdb-key-readwrite)"
      exec { node build/azure-pipelines/common/releaseBuild.js }
    condition: and(succeeded(), or(eq(variables['VSCODE_RELEASE'], true), and(in(variables['VSCODE_QUALITY'], 'insider', 'exploration'), eq(variables['VSCODE_SCHEDULEDBUILD'], true))))
