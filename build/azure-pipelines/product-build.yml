pr: none

schedules:
  - cron: "0 5 * * Mon-Fri"
    displayName: Mon-Fri at 7:00
    branches:
      include:
        - master

parameters:
  - name: VSCODE_BUILD_LINUX
    type: boolean
    default: true
  - name: VSCODE_BUILD_LINUX_ALPINE
    type: boolean
    default: true
  - name: VSCODE_BUILD_LINUX_ARM64
    type: boolean
    default: true
  - name: VSCODE_BUILD_LINUX_ARMHF
    type: boolean
    default: true
  - name: VSCODE_BUILD_WEB
    type: boolean
    default: true
  - name: VSCODE_COMPILE_ONLY
    type: boolean
    default: false

variables:
  - name: VSCODE_CIBUILD
    value: ${{ in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}
  - name: VSCODE_SCHEDULEDBUILD
    value: ${{ eq(variables['Build.Reason'], 'Schedule') }}

resources:
  containers:
    - container: vscode-x64
      image: vscodehub.azurecr.io/vscode-linux-build-agent:bionic-x64
      endpoint: VSCodeHub
      options: --user 0:0
    - container: vscode-arm64
      image: vscodehub.azurecr.io/vscode-linux-build-agent:stretch-arm64
      endpoint: VSCodeHub
    - container: vscode-armhf
      image: vscodehub.azurecr.io/vscode-linux-build-agent:stretch-armhf
      endpoint: VSCodeHub
    - container: snapcraft
      image: snapcore/snapcraft:stable

stages:
  - stage: Compile
    jobs:
      - job: Compile
        pool: compile
        variables:
          VSCODE_ARCH: x64
        steps:
          - template: product-compile.yml
      - job: Hygiene
        pool: compile
        variables:
          VSCODE_ARCH: x64
        steps:
          - template: product-hygiene.yml

  - ${{ if eq(parameters.VSCODE_COMPILE_ONLY, false) }}:
    - stage: Windows
      dependsOn:
        - Compile
      pool:
        vmImage: VS2017-Win2016
      jobs:
        - job: Windows
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32'], 'true'))
          timeoutInMinutes: 90
          variables:
            VSCODE_ARCH: x64
          steps:
            - template: win32/product-build-win32.yml

        - ${{ if eq(variables['VSCODE_CIBUILD'], false) }}:
          - job: Windows32
            condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32_32BIT'], 'true'))
            timeoutInMinutes: 90
            variables:
              VSCODE_ARCH: ia32
            steps:
              - template: win32/product-build-win32.yml

        - ${{ if eq(variables['VSCODE_CIBUILD'], false) }}:
          - job: WindowsARM64
            condition: and(succeeded(), eq(variables['VSCODE_BUILD_WIN32_ARM64'], 'true'))
            timeoutInMinutes: 90
            variables:
              VSCODE_ARCH: arm64
            steps:
              - template: win32/product-build-win32.yml

  - ${{ if eq(parameters.VSCODE_COMPILE_ONLY, false) }}:
    - stage: Linux
      dependsOn:
        - Compile
      pool:
        vmImage: "Ubuntu-18.04"
      jobs:

        - ${{ if eq(parameters.VSCODE_BUILD_LINUX, true) }}:
          - job: Linux
            container: vscode-x64
            variables:
              VSCODE_ARCH: x64
              NPM_ARCH: x64
            steps:
              - template: linux/product-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX, true)) }}:
          - job: LinuxSnap
            dependsOn:
              - Linux
            container: snapcraft
            variables:
              VSCODE_ARCH: x64
            steps:
              - template: linux/snap-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX_ARMHF, true)) }}:
          - job: LinuxArmhf
            container: vscode-armhf
            variables:
              VSCODE_ARCH: armhf
              NPM_ARCH: armv7l
            steps:
              - template: linux/product-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX_ARMHF, true)) }}:
          - job: LinuxSnapArmhf
            dependsOn:
              - LinuxArmhf
            container: snapcraft
            variables:
              VSCODE_ARCH: armhf
            steps:
              - template: linux/snap-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX_ARM64, true)) }}:
          - job: LinuxArm64
            container: vscode-arm64
            variables:
              VSCODE_ARCH: arm64
              NPM_ARCH: arm64
            steps:
              - template: linux/product-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX_ARM64, true)) }}:
          - job: LinuxSnapArm64
            dependsOn:
              - LinuxArm64
            container: snapcraft
            variables:
              VSCODE_ARCH: arm64
            steps:
              - template: linux/snap-build-linux.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_LINUX_ALPINE, true)) }}:
          - job: LinuxAlpine
            steps:
              - template: linux/product-build-alpine.yml

        - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_BUILD_WEB, true)) }}:
          - job: LinuxWeb
            variables:
              VSCODE_ARCH: x64
            steps:
              - template: web/product-build-web.yml

  - ${{ if eq(parameters.VSCODE_COMPILE_ONLY, false) }}:
    - stage: macOS
      dependsOn:
        - Compile
      pool:
        vmImage: macOS-latest
      jobs:
        - job: macOS
          condition: and(succeeded(), eq(variables['VSCODE_BUILD_MACOS'], 'true'))
          timeoutInMinutes: 90
          variables:
            VSCODE_ARCH: x64
          steps:
            - template: darwin/product-build-darwin.yml

        - ${{ if eq(variables['VSCODE_CIBUILD'], false) }}:
          - job: macOSARM64
            condition: and(succeeded(), eq(variables['VSCODE_BUILD_MACOS_ARM64'], 'true'))
            timeoutInMinutes: 90
            variables:
              VSCODE_ARCH: arm64
            steps:
              - template: darwin/product-build-darwin.yml

  - ${{ if and(eq(variables['VSCODE_CIBUILD'], false), eq(parameters.VSCODE_COMPILE_ONLY, false)) }}:
    - stage: Publish
      dependsOn:
        - Windows
        - Linux
        - macOS
      condition: succeededOrFailed()
      pool:
        vmImage: "Ubuntu-18.04"
      jobs:
        - job: SyncMooncake
          displayName: Sync Mooncake
          steps:
            - template: sync-mooncake.yml

        - job: ReleaseBuild
          condition: and(succeeded(), or(eq(variables['VSCODE_RELEASE'], 'true'), and(or(eq(variables['VSCODE_QUALITY'], 'insider'), eq(variables['VSCODE_QUALITY'], 'exploration')), eq(variables['Build.Reason'], 'Schedule'))))
          displayName: Release Build
          steps:
            - template: release.yml
