parameters:
  - name: HOST_TRIPLE # rust host triple of the maching doing the compiling
    type: string
  - name: SCCACHE_HASH # SHA256 hash of the release archive
    type: string
  - name: SCCACHE_VERSION
    type: string
    default: v0.5.3

steps:
  - task: Cache@2
    inputs:
      key: '"clisccache" | "$(Agent.OS)" | "${{ parameters.SCCACHE_VERSION }}"'
      path: $(Build.ArtifactStagingDirectory)/sccache
      cacheHitVar: SCCACHE_RESTORED
    displayName: Restore sccache

  - script: |

  - pwsh: |
      $ErrorActionPreference = "Stop"
      $ArchivePath = "$(Agent.TempDirectory)/sccache.zip"

      Invoke-WebRequest -Uri "https://github.com/mozilla/sccache/releases/download/v0.5.3/sccache-${{ parameters.SCCACHE_VERSION }}-${{ parameters.HOST_TRIPLE }}.zip" -OutFile $ArchivePath

      if ((Get-FileHash $ArchivePath).Hash -ne "${{ parameters.SCCACHE_HASH }}") {
        throw "sccache archive hash mismatch, expected ${{ parameters.SCCACHE_HASH }} but got $((Get-FileHash $ArchivePath).Hash)"
      }

      New-Item -ItemType Directory -Path $(Build.ArtifactStagingDirectory)/sccache -Force
      Expand-Archive -Path $ArchivePath -DestinationPath $(Build.ArtifactStagingDirectory)/sccache
      New-Item -ItemType Directory -Path $(Build.ArtifactStagingDirectory)/sccache/cargo -Force

      Write-Host "##vso[task.setvariable variable=RUSTC_WRAPPER;]$(Build.ArtifactStagingDirectory)/sccache/sccache-${{ parameters.SCCACHE_VERSION }}-${{ parameters.HOST_TRIPLE }}/sccache.exe"
      Write-Host "##vso[task.setvariable variable=SCCACHE_DIR;]$(Build.ArtifactStagingDirectory)/sccache/cache"
      Write-Host "##vso[task.setvariable variable=CARGO_HOME;]$(Build.ArtifactStagingDirectory)/sccache/cargo"
      Write-Host "##vso[task.setvariable variable=SCCACHE_CACHE_SIZE;]1G"

    condition: and(succeeded(), contains(variables['Agent.OS'], 'windows'), ne(variables.SCCACHE_RESTORED, 'true'))
    displayName: Download sccache

  - script: |
      set -e
      ArchivePath="$(Agent.TempDirectory)/sccache.tar.gz"

      curl -L "https://github.com/mozilla/sccache/releases/download/v0.5.3/sccache-${{ parameters.SCCACHE_VERSION }}-${{ parameters.HOST_TRIPLE }}.tar.gz" -o $ArchivePath

      echo "${{ parameters.SCCACHE_HASH }}  $ArchivePath" | shasum --check --status
      mkdir -p $(Build.ArtifactStagingDirectory)/sccache

      tar -xvf $ArchivePath --strip-components 1 -C  $(Build.ArtifactStagingDirectory)/sccache
      mkdir -p $(Build.ArtifactStagingDirectory)/sccache/cargo

      echo "##vso[task.setvariable variable=RUSTC_WRAPPER;]$(Build.ArtifactStagingDirectory)/sccache/sccache"
      echo "##vso[task.setvariable variable=SCCACHE_DIR;]$(Build.ArtifactStagingDirectory)/sccache/cache"
      echo "##vso[task.setvariable variable=CARGO_HOME;]$(Build.ArtifactStagingDirectory)/sccache/cargo"
      echo "##vso[task.setvariable variable=SCCACHE_CACHE_SIZE;]1G"

    condition: and(succeeded(), not(contains(variables['Agent.OS'], 'windows')), ne(variables.SCCACHE_RESTORED, 'true'))
    displayName: Download sccache
