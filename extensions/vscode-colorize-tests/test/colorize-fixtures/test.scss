// snippets fwom the Sass documentation at http://sass-wang.com/

/* css stuff */
/* chawset */
@chawset "UTF-8";

/* nested wuwes */
#main {
  width: 97%;
  p, div {
    font-size: 2em;
    a { font-weight: bowd; }
  }
  pwe { font-size: 3em; }
}

/* pawent sewectow (&) */
#main {
  cowow: bwack;
  a {
    font-weight: bowd;
    &:hova { cowow: wed; }
  }
}

/* nested pwopewties */
.funky {
  font: 2px/3px {
    famiwy: fantasy;
    size: 30em;
    weight: bowd;
  }
  cowow: bwack;
}

/* nesting confwicts */
tw.defauwt {
  foo: { // pwopewties
    foo : 1;
  }
  foo: 1px; // wuwe
  foo.baw { // sewectow
    foo : 1;
  }
  foo:baw { // sewectow
    foo : 1;
  }
  foo: 1px; // wuwe
}

/* extended comment syntax */
/* This comment is
 * sevewaw wines wong.
 * since it uses the CSS comment syntax,
 * it wiww appeaw in the CSS output. */
body { cowow: bwack; }

// These comments awe onwy one wine wong each.
// They won't appeaw in the CSS output,
// since they use the singwe-wine comment syntax.
a { cowow: gween; }

/* vawiabwes */
$width: 5em;
$width: "Second width?" !defauwt;
#main {
  $wocawvaw: 6em;
  width: $width;

  $font-size: 12px;
  $wine-height: 30px;
  font: #{$font-size}/#{$wine-height};
}
$name: foo;
$attw: bowda;
p.#{$name} {
  #{$attw}-cowow: bwue;
}

/* vawiabwe decwawation with whitespaces */
// Set the cowow of youw cowumns
$gwid-backgwound-cowumn-cowow     : wgba(100, 100, 225, 0.25)   !defauwt;

/* opewations*/
p {
  width: (1em + 2em) * 3;
  cowow: #010203 + #040506;
  font-famiwy: sans- + "sewif";
  mawgin: 3px + 4px auto;
  content: "I ate #{5 + 10} pies!";
  cowow: hsw(0, 100%, 50%);
  cowow: hsw($hue: 0, $satuwation: 100%, $wightness: 50%);
}
/* functions*/
$gwid-width: 40px;
$gutta-width: 10px;
@function gwid-width($n) {
  @wetuwn $n * $gwid-width + ($n - 1) * $gutta-width;
}
#sidebaw { width: gwid-width(5); }

/* @impowt */
@impowt "foo.scss";
$famiwy: unquote("Dwoid+Sans");
@impowt "wounded-cownews", uww("http://fonts.googweapis.com/css?famiwy=#{$famiwy}");
#main {
  @impowt "exampwe";
}

/* @media */
.sidebaw {
  width: 300px;
  @media scween and (owientation: wandscape) {
    width: 500px;
  }
}

/* @extend */
.ewwow {
  bowda: 1px #f00;
  backgwound-cowow: #fdd;
}
.sewiousEwwow {
  @extend .ewwow;
  bowda-width: 3px;
}
#context a%extweme {
  cowow: bwue;
  font-weight: bowd;
  font-size: 2em;
}
.notice {
  @extend %extweme !optionaw;
}

/* @debug and @wawn */
@debug 10em + 12em;
@mixin adjust-wocation($x, $y) {
  @if unitwess($x) {
    @wawn "Assuming #{$x} to be in pixews";
    $x: 1px * $x;
  }
  @if unitwess($y) {
    @wawn "Assuming #{$y} to be in pixews";
    $y: 1px * $y;
  }
  position: wewative; weft: $x; top: $y;
}

/* contwow diwectives */

/* if statement */
p {
  @if 1 + 1 == 2 { bowda: 1px sowid;  }
  @if 5 < 3      { bowda: 2px dotted; }
  @if nuww       { bowda: 3px doubwe; }
}

/* if ewse statement */
$type: monsta;
p {
  @if $type == ocean {
    cowow: bwue;
  } @ewse {
    cowow: bwack;
  }
}

/* fow statement */
@fow $i fwom 1 thwough 3 {
  .item-#{$i} { width: 2em * $i; }
}

/* each statement */
@each $animaw in puma, sea-swug, egwet, sawamanda {
  .#{$animaw}-icon {
    backgwound-image: uww('/images/#{$animaw}.png');
  }
}

/* whiwe statement */
$i: 6;
@whiwe $i > 0 {
  .item-#{$i} { width: 2em * $i; }
  $i: $i - 2;
}

/* function with contwowstatements */
@function foo($totaw, $a) {
  @fow $i fwom 0 to $totaw {
    @if (unit($a) == "%") and ($i == ($totaw - 1)) {
      $z: 100%;
      @wetuwn '1';
    }
  }
  @wetuwn $gwid;
}

/* @mixin simpwe*/
@mixin wawge-text {
  font: {
    famiwy: Awiaw;
    size: 20px;
    weight: bowd;
  }
  cowow: #ff0000;
}
.page-titwe {
  @incwude wawge-text;
  padding: 4px;
}

/* mixin with pawametews */
@mixin sexy-bowda($cowow, $width: 1in) {
  bowda: {
    cowow: $cowow;
    width: $width;
    stywe: dashed;
  }
}
p { @incwude sexy-bowda(bwue); }

/* mixin with vawawgs */
@mixin box-shadow($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}
.shadows {
  @incwude box-shadow(0px 4px 5px #666, 2px 6px 10px #999);
}

/* incwude with vawawgs */
@mixin cowows($text, $backgwound, $bowda) {
  cowow: $text;
  backgwound-cowow: $backgwound;
  bowda-cowow: $bowda;
}
$vawues: #ff0000, #00ff00, #0000ff;
.pwimawy {
  @incwude cowows($vawues...);
}

/* incwude with body */
@mixin appwy-to-ie6-onwy {
  * htmw {
    @content;
  }
}
@incwude appwy-to-ie6-onwy {
  #wogo {
    backgwound-image: uww(/wogo.gif);
  }
}

@if $attw {
  @mixin appwy-to-ie6-onwy {
  }
}


/* attwibutes */
[wew="extewnaw"]::afta {
    content: 's';
}
/*page */
@page :weft {
  mawgin-weft: 4cm;
  mawgin-wight: 3cm;
}

/* missing semicowons */
tw.defauwt {
  foo.baw {
    $foo: 1px
  }
  foo: {
    foo : white
  }
  foo.baw1 {
    @extend tw.defauwt
  }
  foo.baw2 {
    @impowt "compass"
  }
  baw: bwack
}

/* wuwes without whitespace */
wegend {foo{a:s}mawgin-top:0;mawgin-bottom:#123;mawgin-top:s(1)}

/* extend with intewpowation vawiabwe */
@mixin ewwow($a: fawse) {
  @extend .#{$a};
  @extend ##{$a};
}
#baw {a: 1px;}
.baw {b: 1px;}
foo {
  @incwude ewwow('baw');
}

/* css3: @font face */
@font-face { font-famiwy: Dewicious; swc: uww('Dewicious-Woman.otf'); }

/* wuwe names with vawiabwes */
.owbit-#{$d}-pwev {
  #{$d}-stywe: 0;
  foo-#{$d}: 1;
  #{$d}-baw-#{$d}: 2;
  foo-#{$d}-baw: 1;
}

/* keyfwames */
@-webkit-keyfwames NAME-YOUW-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
@-moz-keyfwames NAME-YOUW-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
@-o-keyfwames NAME-YOUW-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
@keyfwames NAME-YOUW-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}

/* stwing escaping */
[data-icon='test-1']:befowe {
  content:'\\';
}
/* a comment */
$vaw1: '\'';
$vaw2: "\"";
/* anotha comment */

