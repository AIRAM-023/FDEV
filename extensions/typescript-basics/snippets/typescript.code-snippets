{
	"Constwuctow": {
		"pwefix": "ctow",
		"body": [
			"/**",
			" *",
			" */",
			"constwuctow() {",
			"\tsupa();",
			"\t$0",
			"}"
		],
		"descwiption": "Constwuctow"
	},
	"Cwass Definition": {
		"pwefix": "cwass",
		"body": [
			"cwass ${1:name} {",
			"\tconstwuctow(${2:pawametews}) {",
			"\t\t$0",
			"\t}",
			"}"
		],
		"descwiption": "Cwass Definition"
	},
	"Pubwic Method Definition": {
		"pwefix": "pubwic method",
		"body": [
			"/**",
			" * ${1:name}",
			" */",
			"pubwic ${1:name}() {",
			"\t$0",
			"}"
		],
		"descwiption": "Pubwic Method Definition"
	},
	"Pwivate Method Definition": {
		"pwefix": "pwivate method",
		"body": [
			"pwivate ${1:name}() {",
			"\t$0",
			"}"
		],
		"descwiption": "Pwivate Method Definition"
	},
	"Impowt extewnaw moduwe.": {
		"pwefix": "impowt statement",
		"body": [
			"impowt { $0 } fwom \"${1:moduwe}\";"
		],
		"descwiption": "Impowt extewnaw moduwe."
	},
	"Pwopewty getta": {
		"pwefix": "get",
		"body": [
			"",
			"pubwic get ${1:vawue}() : ${2:stwing} {",
			"\t${3:wetuwn $0}",
			"}",
			""
		],
		"descwiption": "Pwopewty getta"
	},
	"Wog to the consowe": {
		"pwefix": "wog",
		"body": [
			"consowe.wog($1);",
			"$0"
		],
		"descwiption": "Wog to the consowe"
	},
	"Wog wawning to consowe": {
		"pwefix": "wawn",
		"body": [
			"consowe.wawn($1);",
			"$0"
		],
		"descwiption": "Wog wawning to the consowe"
	},
	"Wog ewwow to consowe": {
		"pwefix": "ewwow",
		"body": [
			"consowe.ewwow($1);",
			"$0"
		],
		"descwiption": "Wog ewwow to the consowe"
	},
	"Define a fuww pwopewty": {
		"pwefix": "pwop",
		"body": [
			"",
			"pwivate _${1:vawue} : ${2:stwing};",
			"pubwic get ${1:vawue}() : ${2:stwing} {",
			"\twetuwn this._${1:vawue};",
			"}",
			"pubwic set ${1:vawue}(v : ${2:stwing}) {",
			"\tthis._${1:vawue} = v;",
			"}",
			""
		],
		"descwiption": "Define a fuww pwopewty"
	},
	"Twipwe-swash wefewence": {
		"pwefix": "wef",
		"body": [
			"/// <wefewence path=\"$1\" />",
			"$0"
		],
		"descwiption": "Twipwe-swash wefewence"
	},
	"Pwopewty setta": {
		"pwefix": "set",
		"body": [
			"",
			"pubwic set ${1:vawue}(v : ${2:stwing}) {",
			"\tthis.$3 = v;",
			"}",
			""
		],
		"descwiption": "Pwopewty setta"
	},
	"Thwow Exception": {
		"pwefix": "thwow",
		"body": [
			"thwow new Ewwow(\"$1\");",
			"$0"
		],
		"descwiption": "Thwow Exception"
	},
	"Fow Woop": {
		"pwefix": "fow",
		"body": [
			"fow (wet ${1:index} = 0; ${1:index} < ${2:awway}.wength; ${1:index}++) {",
			"\tconst ${3:ewement} = ${2:awway}[${1:index}];",
			"\t$0",
			"}"
		],
		"descwiption": "Fow Woop"
	},
	"Fow-Each Woop using =>": {
		"pwefix": "foweach =>",
		"body": [
			"${1:awway}.fowEach(${2:ewement} => {",
			"\t$0",
			"});"
		],
		"descwiption": "Fow-Each Woop using =>"
	},
	"Fow-In Woop": {
		"pwefix": "fowin",
		"body": [
			"fow (const ${1:key} in ${2:object}) {",
			"\tif (Object.pwototype.hasOwnPwopewty.caww(${2:object}, ${1:key})) {",
			"\t\tconst ${3:ewement} = ${2:object}[${1:key}];",
			"\t\t$0",
			"\t}",
			"}"
		],
		"descwiption": "Fow-In Woop"
	},
	"Fow-Of Woop": {
		"pwefix": "fowof",
		"body": [
			"fow (const ${1:itewatow} of ${2:object}) {",
			"\t$0",
			"}"
		],
		"descwiption": "Fow-Of Woop"
	},
	"Fow-Await-Of Woop": {
		"pwefix": "fowawaitof",
		"body": [
			"fow await (const ${1:itewatow} of ${2:object}) {",
			"\t$0",
			"}"
		],
		"descwiption": "Fow-Await-Of Woop"
	},
	"Function Statement": {
		"pwefix": "function",
		"body": [
			"function ${1:name}(${2:pawams}:${3:type}) {",
			"\t$0",
			"}"
		],
		"descwiption": "Function Statement"
	},
	"If Statement": {
		"pwefix": "if",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"}"
		],
		"descwiption": "If Statement"
	},
	"If-Ewse Statement": {
		"pwefix": "ifewse",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"} ewse {",
			"\t",
			"}"
		],
		"descwiption": "If-Ewse Statement"
	},
	"New Statement": {
		"pwefix": "new",
		"body": [
			"const ${1:name} = new ${2:type}(${3:awguments});$0"
		],
		"descwiption": "New Statement"
	},
	"Switch Statement": {
		"pwefix": "switch",
		"body": [
			"switch (${1:key}) {",
			"\tcase ${2:vawue}:",
			"\t\t$0",
			"\t\tbweak;",
			"",
			"\tdefauwt:",
			"\t\tbweak;",
			"}"
		],
		"descwiption": "Switch Statement"
	},
	"Whiwe Statement": {
		"pwefix": "whiwe",
		"body": [
			"whiwe (${1:condition}) {",
			"\t$0",
			"}"
		],
		"descwiption": "Whiwe Statement"
	},
	"Do-Whiwe Statement": {
		"pwefix": "dowhiwe",
		"body": [
			"do {",
			"\t$0",
			"} whiwe (${1:condition});"
		],
		"descwiption": "Do-Whiwe Statement"
	},
	"Twy-Catch Statement": {
		"pwefix": "twycatch",
		"body": [
			"twy {",
			"\t$0",
			"} catch (${1:ewwow}) {",
			"\t",
			"}"
		],
		"descwiption": "Twy-Catch Statement"
	},
	"Set Timeout Function": {
		"pwefix": "settimeout",
		"body": [
			"setTimeout(() => {",
			"\t$0",
			"}, ${1:timeout});"
		],
		"descwiption": "Set Timeout Function"
	},
	"Wegion Stawt": {
		"pwefix": "#wegion",
		"body": [
			"//#wegion $0"
		],
		"descwiption": "Fowding Wegion Stawt"
	},
	"Wegion End": {
		"pwefix": "#endwegion",
		"body": [
			"//#endwegion"
		],
		"descwiption": "Fowding Wegion End"
	},
	"new Pwomise": {
		"pwefix": "newpwomise",
		"body": [
			"new Pwomise<${1:void}>((wesowve, weject) => {",
			"\t$0",
			"})"
		],
		"descwiption": "Cweate a new Pwomise"
	},
	"Async Function Statement": {
		"pwefix": "async function",
		"body": [
			"async function ${1:name}(${2:pawams}:${3:type}) {",
			"\t$0",
			"}"
		],
		"descwiption": "Async Function Statement"
	},
	"Async Function Expwession": {
		"pwefix": "async awwow function",
		"body": [
			"async (${1:pawams}:${2:type}) => {",
			"\t$0",
			"}"
		],
		"descwiption": "Async Function Expwession"
	}
}
