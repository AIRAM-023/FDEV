{
  "information_for_contributors": [
    "This file has been converted (and modified) from https://github.com/textmate/cmake.tmbundle"
  ],
  "version": "1.0.0",
  "name": "CMake",
  "scopeName": "source.cmake",
  "patterns": [
    {
      "begin": "(?i)^\\s*(function|macro)\\s*(\\()",
      "beginCaptures": {
        "1": {
          "name": "support.function.cmake"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.command.cmake"
        }
      },
      "contentName": "meta.function-call.function.cmake",
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.command.cmake"
        }
      },
      "name": "meta.function-call.command.cmake",
      "patterns": [
        {
          "include": "#argument-constants"
        },
        {
          "include": "#items"
        }
      ]
    },
    {
      "begin": "(?ix)\n\t\t\t^\\s*\t# Start of the line with optional preceding space\n\t\t\t(?:\t# Either a control flow keyword\n\t\t\t\t((?:end)?(?:(?:else)?if|while|foreach)|return|else)\n\t\t\t\t|\t# Or a function\n\t\t\t\t(c(?:make_(?:host_system_information|path)|test_sleep)|(?:ctest_empty_binary|make)_directory|(?:(?:set_(?:source_files|directory|t(?:arget|ests))_propert|(?:target_(?:include|link)|link)_director|(?:target_)?link_librar|include_director)ie|export_library_dependencie|target_precompile_header|(?:target_(?:compile_featur|sourc)|ctest_read_custom_fil|output_required_fil|variable_requir|install_fil)e|cmake_parse_argument|separate_argument|install_program|execute_proces|install_target|subdir_depend)s|include_regular_expression|(?:include_external_msprojec|get_filename_componen|create_test_sourcelis|ctest_(?:run_scrip|s(?:ubmi|tar))|ctest_tes|projec|lis)t|(?:target_compil|remov)e_definitions|(?:(?:get_(?:source_fil|cmak)e|get_(?:directory|t(?:arge|es)t)|define|[gs]et)_propert|cmake_polic)y|a(?:dd_(?:c(?:ompile_(?:defini|op)tions|ustom_(?:command|target))|(?:subdirecto|libra)ry|dependencies|link_options|definitions|executable|test)|ux_source_directory)|(?:c(?:make_minimum_require|test_(?:uploa|buil))|mark_as_advance|include_guar)d|target_(?:compile|link)_options|use_mangled_mesa|(?:enable_languag|c(?:test_(?:configur|updat)|test_coverag|make_languag|ontinu)|utility_sourc|(?:find_pack|mess)ag|load_cach|build_nam|site_nam|fil)e|e(?:n(?:able_testing|dmacro)|xec_program|lseif|ndif)|(?:variable_watc|endforeac|(?:find_p|m)at|foreac)h|ctest_memcheck|(?:configure_f|try_comp|write_f|find_f|endwh|wh)ile|build_command|fltk_wrap_ui|find_program|(?:source_grou|qt_wrap_cp)p|find_library|load_command|(?:endfunc|func|op)tion|qt_wrap_ui|in(?:stall|clude)|subdirs|(?:try_ru|retur)n|remove|e(?:xport|lse)|string|macro|break|unset|set|if)\n\t\t\t\t|\t# Or some function we donâ€™t know about\n\t\t\t\t(\\w+)\n\t\t\t)\n\t\t\t\\s*(\\()\t# Finally, the opening parenthesis for the argument list\n\t\t\t",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.cmake"
        },
        "2": {
          "name": "support.function.cmake"
        },
        "3": {
          "name": "punctuation.definition.parameters.begin.command.cmake"
        }
      },
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.command.cmake"
        }
      },
      "name": "meta.function-call.command.cmake",
      "patterns": [
        {
          "include": "#argument-constants"
        },
        {
          "include": "#items"
        }
      ]
    },
    {
      "include": "#items"
    }
  ],
  "repository": {
    "argument-constants": {
      "match": "\\b(R(UN(_(RESULT_VAR|OUTPUT_VARIABLE)|TIME(_DIRECTORY)?)|E(G(ULAR_EXPRESSION|EX)|MOVE(_(RECURSE|ITEM|DUPLICATES|AT))?|S(OURCE|ULT(_VAR(IABLE)?)?)|NAME|T(RY_(COUNT|DELAY)|URN_VALUE)|PLACE|VERSE|QUIRED(_VARIABLE(1|2))?|L(EASE|ATIVE(_PATH)?)|AD(_WITH_PREFIX)?)|AN(GE|DOM(_SEED)?))|G(R(OUP_(READ|EXECUTE)|EATER)|U(ID|ARD)|E(NE(RATE|X_STRIP)|T)|LOB(_RECURSE|AL)?)|M(ODULE|D5|ESSAGE(_NEVER)?|A(COSX_BUNDLE|TCH(ES|ALL)?|IN_DEPENDENCY|KE_(C_IDENTIFIER|DIRECTORY)))|B(RIEF_DOCS|YPRODUCTS|U(NDLE|ILD(_(TESTING|INTERFACE))?)|EFORE)|S(HA(RED|1|2(24|56)|384|512)|YSTEM|C(RIPT|HEDULE_RANDOM)|T(R(GREATER|I(NGS|DE|P)|EQUAL|LESS)|OP_TIME|A(RT|TIC))|O(RT|URCE(S)?)|UBSTRING|ET)|H(INTS|EX)|N(NNN|O(_(MODULE|S(YSTEM_ENVIRONMENT_PATH|OURCE_PERMISSIONS)|CMAKE_(BUILDS_PATH|SYSTEM_PA(CKAGE_REGISTRY|TH)|PA(CKAGE_REGISTRY|TH)|ENVIRONMENT_PATH|FIND_ROOT_PATH)|DEFAULT_PATH|POLICY_SCOPE)|T(E(QUAL)?)?)|UMBER_(ERRORS|WARNINGS)|EW(_PROCESS|LINE_STYLE)?|AME(S(PACE)?|LINK_(SKIP|ONLY))?)|C(RLF|M(P(00(17|48))?|AKE_(MODULE_PATH|CURRENT_(BINARY_DIR|SOURCE_DIR)|F(IND_ROOT_PATH_BOTH|LAGS)))?|T(EST_(B(INARY_DIRECTORY|UILD_(COMMAND|TARGET))|SOURCE_DIRECTORY|PROJECT_NAME))?|O(M(M(ENT|AND(_NAME)?)|P(ILE_(RESULT_VAR|OUTPUT_VARIABLE|DEFINITIONS)|ONENT(S)?|ARE)?)|N(CAT|TENT|DITION|FIG(S|UR(E(_FILE)?|ATION(S)?))?)|DE|PY(_FILE(_ERROR)?|ONLY)?)|DASH_UPLOAD(_TYPE)?|VS|LEAR|ACHE(D_VARIABLE)?)|_(BAR|COMMAND|VERSION(_(M(INOR|AJOR)|TWEAK|PATCH))?|FOO)|T(RACK|YPE|IME(STAMP|OUT)|O(_(NATIVE_PATH|CMAKE_PATH)|UPPER|LOWER)|EST(_VARIABLE)?|ARGET(S|_(OBJECTS|FILE))?)|I(MP(ORTED(_(NO_SONAME|LOCATION(_)?)?)?|LICIT_DEPENDS)|S_(SYMLINK|NEWER_THAN|DIRECTORY|ABSOLUTE)|N(S(TALL(_INTERFACE)?|ERT)|HERITED|CLUDE(S|_(INTERNALS|DIRECTORIES|LABEL))?|_LIST|TERFACE(_)?|PUT(_FILE)?)?|TEMS|DE)|O(R|BJECT|N(LY(_CMAKE_FIND_ROOT_PATH)?)?|UTPUT(_(STRIP_TRAILING_WHITESPACE|DIRECTORY|VARIABLE|QUIET|FILE))?|PTION(S|AL(_COMPONENTS)?)|FF(SET)?|WNER_(READ|EXECUTE|WRITE)|LD)|D(BAR|IRECTORY(_PERMISSIONS)?|O(S|WNLOAD)|E(STINATION|PENDS|FIN(ITION|ED))|VAR|FOO)|U(SE(S_TERMINAL|_SOURCE_PERMISSIONS)|N(IX|KNOWN)|TC|UID|P(PER|LOAD))|P(R(IVATE(_HEADER)?|O(GRAM(S|_ARGS)?|CESS|JECT(_(NAME|VERSION(_(M(INOR|AJOR)|TWEAK|PATCH))?))?|PERT(Y|IES))|E(_(BUILD|INSTALL_SCRIPT|LINK)|ORDER))|O(ST_(BUILD|INSTALL_SCRIPT)|P|LICY)|U(BLIC(_HEADER)?|SH)|ERMISSIONS|LATFORM|A(R(TS|ENT_SCOPE|ALLEL_LEVEL)|CKAGE|T(H(S|_(SUFFIXES|TO_MESA))|TERN)))|E(RROR_(STRIP_TRAILING_WHITESPACE|VARIABLE|QUIET|FILE)|X(CLUDE(_(FROM_ALL|LABEL))?|TRA_INCLUDE|ISTS|P(R|ORT(_LINK_INTERFACE_LIBRARIES)?)|ACT)|SCAPE_QUOTES|N(D|V)|QUAL)|V(S|ER(BATIM|SION(_(GREATER|EQUAL|LESS))?)|A(R(2|IABLE)?|LUE))|QU(IET|ERY)|F(RAMEWORK|I(ND|LE(S(_MATCHING)?|_PERMISSIONS)?)|O(RCE|O_(STRING|ENABLE)|LLOW_SYMLINKS)|U(NCTION|LL_DOCS)|LAGS|ATAL_ERROR)|01|W(RITE|IN(32|DOWS)|ORKING_DIRECTORY)|L(I(MIT|BRARY|ST(S|_DIRECTORIES)|NK_(INTERFACE_LIBRARIES|DIRECTORIES|P(RIVATE|UBLIC)|LIBRARIES))|OCK|D_LIBRARY_PATH|E(SS|NGTH)|F|A(BELS|NGUAGES))|A(R(G(S|N|C|_VAR|V(1|2))|CHIVE)|SCII|ND|PPEND(_STRING)?|FTER|L(IAS|PHABET|L(_BUILD)?)))\\b",
      "name": "keyword.other.argument-separator.cmake"
    },
    "comments": {
      "begin": "(^[ \\t]+)?(?=#)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.cmake"
        }
      },
      "end": "(?!\\G)",
      "patterns": [
        {
          "begin": "#\\[\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.cmake"
            }
          },
          "end": "\\]\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.cmake"
            }
          },
          "name": "comment.block.cmake"
        },
        {
          "begin": "#",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.cmake"
            }
          },
          "end": "\\n",
          "name": "comment.line.number-sign.cmake"
        }
      ]
    },
    "constants": {
      "match": "(?i)\\b(FALSE|TRUE|OFF|ON|NO|YES|(\\w+-)?NOTFOUND)\\b",
      "name": "constant.language.boolean.cmake"
    },
    "escapes": {
      "patterns": [
        {
          "match": "\\\\[\"()#$^ \\\\]",
          "name": "constant.character.escape.cmake"
        }
      ]
    },
    "items": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#expressions"
        },
        {
          "include": "#escapes"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "constant.language.boolean.cmake"
            }
          },
          "match": "(?i)\"(FALSE|TRUE|OFF|ON|NO|YES|(.+-)?NOTFOUND)\"",
          "name": "string.quoted.double.cmake"
        },
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.cmake",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.cmake"
            },
            {
              "include": "#variables"
            },
            {
              "include": "#expressions"
            }
          ]
        }
      ]
    },
    "variables": {
      "begin": "\\$(ENV)?\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.variable.begin.cmake"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.variable.end.cmake"
        }
      },
      "name": "variable.other.cmake",
      "patterns": [
        {
          "include": "#variables"
        },
        {
          "match": "\\w+"
        }
      ]
    },
    "expressions": {
      "begin": "\\$\\<",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.variable.begin.cmake"
        }
      },
      "end": "\\>",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.variable.end.cmake"
        }
      },
      "name": "variable.other.cmake",
      "patterns": [
        {
          "include": "#expressions"
        }
      ]
    }
  }
}
