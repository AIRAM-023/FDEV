# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
# Reference: https://github.com/microsoft/vscode/wiki/How-to-Contribute
properties:
  resources:
    # Resource configurations...
  # Configuration Version
  configurationVersion: 0.2.0

# Document Configuration Version:
# The `configurationVersion` field specifies the version of the configuration schema used in this file.
# Its value follows a semantic versioning scheme (Major.Minor.Patch), where:
# - Major version indicates significant changes that may introduce backward incompatibilities.
# - Minor version indicates backward-compatible additions or modifications to the schema.
# - Patch version indicates backward-compatible bug fixes or minor improvements.
# Users can refer to this field to understand the structure and semantics of the configuration file.
# It also helps tooling and parsers to validate and interpret the configuration correctly.
# Any updates to the schema should be reflected in the configuration version to ensure compatibility.
properties:
  resources:
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: npm
      directives:
        description: Install NodeJS version >=18.15.x and <19
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS.LTS
        version: "18.18.0"
        source: winget
    - resource: NpmDsc/NpmPackage
      id: yarn
      dependsOn:
        - npm
      directives:
        description: Install Yarn
        allowPrerelease: true
      settings:
        Name: 'yarn'
        Global: true
        PackageDirectory: '${WinGetConfigRoot}\..\'
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Python 3.10
        allowPrerelease: true
      settings:
        id: Python.Python.3.10
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vsPackage
      directives:
        description: Install Visual Studio 2022 (any edition is OK)
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudio.2022.BuildTools
        source: winget
    - resource: Microsoft.VisualStudio.DSC/VSComponents
      dependsOn:
        - vsPackage
      directives:
        description: Install required VS workloads
        allowPrerelease: true
      settings:
        productId: Microsoft.VisualStudio.Product.BuildTools
        channelId: VisualStudio.17.Release
        includeRecommended: true
        components:
          - Microsoft.VisualStudio.Workload.VCTools
    - resource: YarnDsc/YarnInstall
      dependsOn:
        - npm
      directives:
        description: Install dependencies
        allowPrerelease: true
      settings:
        PackageDirectory: '${WinGetConfigRoot}\..\'
  configurationVersion: 0.2.0
